{"version":3,"sources":["demo/views/Test.jsx"],"names":["file","a","fetch","checkStatus","response","json","data","ok","Error","status","statusText","Test","props","useState","setData","title","useEffect","loadData","then","d","style","height","display","flexDirection","marginLeft","fontWeight","fontSize","lineHeight","marginBottom","marginTop","color","preferences","panels","hidePeaksPanel","hideStructuresPanel","width","border","justifyContent","alignItems"],"mappings":"4QAIA,iBAAwBA,GAAxB,iBAAAC,EAAA,+EACyBC,MAAMF,GAD/B,cAEEG,YADMC,EADR,iBAGqBA,EAASC,OAH9B,cAGQC,EAHR,yBAISA,GAJT,kD,sBAOA,SAASH,YAAYC,GACnB,IAAKA,EAASG,GACZ,MAAM,IAAIC,MAAJ,eAAkBJ,EAASK,OAA3B,cAAuCL,EAASM,aAExD,OAAON,EAGM,SAASO,KAAKC,GAC3B,MAAwBC,qBAAxB,mBAAOP,EAAP,KAAaQ,EAAb,KACQd,EAAgBY,EAAhBZ,KAAMe,EAAUH,EAAVG,MAYd,OAVAC,qBAAU,WACJhB,E,SAnBOiB,S,0CAoBTA,CAASjB,GAAMkB,MAAK,SAACC,GACnBL,EAAQK,MAGVL,EAAQ,MAET,CAACd,EAAMY,IAGR,sBACEQ,MAAO,CACLC,OAAQ,OACRC,QAAS,OACTC,cAAe,SACfC,WAAY,IALhB,UAQE,oBACEJ,MAAO,CACLK,WAAY,IACZC,SAAU,QACVC,WAAY,QACZC,aAAc,QALlB,qEAUCb,GACC,mBACEK,MAAO,CACLS,UAAW,QACXD,aAAc,OACdH,WAAY,IACZK,MAAO,UACPJ,SAAU,YANd,SASGX,IAGL,cAAC,IAAD,CACET,KAAMA,EACNyB,YAAa,CACXC,OAAQ,CAAEC,gBAAgB,EAAMC,qBAAqB,MAIzD,qBACEd,MAAO,CACLe,MAAO,OACPd,OAAQ,QACRe,OAAQ,mBACRd,QAAS,OACTe,eAAgB,SAChBC,WAAY,UAPhB,SAUE","file":"static/js/9.54b5c908.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\nimport NMRium from '../../component/NMRium';\n\nasync function loadData(file) {\n  const response = await fetch(file);\n  checkStatus(response);\n  const data = await response.json();\n  return data;\n}\n\nfunction checkStatus(response) {\n  if (!response.ok) {\n    throw new Error(`HTTP ${response.status} - ${response.statusText}`);\n  }\n  return response;\n}\n\nexport default function Test(props) {\n  const [data, setData] = useState();\n  const { file, title } = props;\n\n  useEffect(() => {\n    if (file) {\n      loadData(file).then((d) => {\n        setData(d);\n      });\n    } else {\n      setData({});\n    }\n  }, [file, props]);\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        marginLeft: 30,\n      }}\n    >\n      <h5\n        style={{\n          fontWeight: 700,\n          fontSize: '1.5em',\n          lineHeight: '1.4em',\n          marginBottom: '15px',\n        }}\n      >\n        Display and process 1D NMR spectra from a JCAMP-DX file\n      </h5>\n      {title && (\n        <p\n          style={{\n            marginTop: '-10px',\n            marginBottom: '1rem',\n            fontWeight: 400,\n            color: '#9a9a9a',\n            fontSize: '0.7142em',\n          }}\n        >\n          {title}\n        </p>\n      )}\n      <NMRium\n        data={data}\n        preferences={{\n          panels: { hidePeaksPanel: true, hideStructuresPanel: true },\n        }}\n      />\n\n      <div\n        style={{\n          width: '100%',\n          height: '100px',\n          border: '1px dashed black',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <p>\n          You can add you component here or you can design your custom layout.\n          be sure to add view prop inside sample.json and value must match view\n          name under demo/components/views\n        </p>\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}