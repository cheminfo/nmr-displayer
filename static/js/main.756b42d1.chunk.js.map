{"version":3,"sources":["demo/utility/menu.js","demo/Sidebar.jsx","demo/views/index.js","demo/layouts/Admin.jsx","demo/layouts/SingleDisplayerLayout.jsx","demo/layouts/Main.jsx","demo/test/TestRoutes.jsx","index.tsx"],"names":["getMenu","array","nodes","key","parentIndex","_nodes","children","index","cloneElement","Array","isArray","node","createElement","SubMenu","title","groupName","push","MenuItem","getFlatArray","inputArray","_children","item","getKey","filePath","match","RegExp","exec","parentFolderName","parentPath","split","length","replace","sidebarCss","css","sidebarOpenCss","sidebarClosedCss","menuBtCss","logoCss","simpleTextCss","logoNormalCss","sidebarWrapperCss","Sidebar","props","routes","useMemo","buildMenu","menu","subDisplay","menuIsClosed","style","display","padding","type","onClick","onMenuToggle","e","history","Math","random","toString","view","file","mode","withRouter","memo","possibleViews","Exam","lazy","Exercise","SingleView","Test","View","TwoInstances","mainPanelCss","mainPanelOpenCss","mainPanelClosedCss","RenderView","id","params","prop","baseURL","viewName","RenderedView","Dashboard","routesList","mapTreeToFlatArray","concat","useState","setMenuIsClosed","toggleMenu","useCallback","position","top","height","fallback","map","path","render","routeProp","SingleDisplayerLayout","width","marginLeft","marginRight","backgroundColor","patrh","this","PureComponent","styles","bodyContainer","justifyContent","alignItems","container","borderRadius","fontSize","textAlign","normal","color","error","errorHeader","normalHeader","loadButton","border","fontWeight","cursor","url","a","fetch","response","checkStatus","json","data","console","log","ok","Error","status","statusText","Main","isLoaded","setRoutes","dashBoardType","setDashBoardType","loadHandler","href","window","location","useEffect","qs","URL","searchParams","has","sampleURL","get","getFileExtension","substring","lastIndexOf","toLowerCase","loadData","then","remoteRoutes","_remoteRoutes","JSON","parse","stringify","Admin","TestHighlight","ReactDOM","component","TestRoutes","document","getElementById"],"mappings":"wSAoBA,SAASA,UAAuD,IAA/CC,EAA8C,uDAAtC,GAAIC,EAAkC,uDAA1B,GAAIC,EAAsB,uCAAjBC,EAAiB,uDAAH,EACtDC,EAASH,EACTI,EAAW,GAMf,IAAK,IAAMC,KAJU,IAAjBH,GAAsBC,EAAOD,KAC/BC,EAAOD,GAAeI,uBAAaH,EAAOD,GAAc,GAAIE,IAG1CL,EAAO,CACzB,GAAIA,EAAMM,GAAOD,UAAYG,MAAMC,QAAQT,EAAMM,GAAOD,UAAW,CACjE,IAAMK,EAAOC,wBAAcC,IAAS,CAClCV,IAAKI,EAAQJ,EACbW,MAAOb,EAAMM,GAAOQ,YAGtB,OADAV,EAAOW,KAAKL,GACLX,QAAQC,EAAMM,GAAOD,SAAUD,EAAQF,EAAK,GAEnDG,EAASU,KACPJ,wBACEK,IADW,aAETd,IAAKI,EAAQJ,GAAQF,EAAMM,IAC7BN,EAAMM,GAAOO,QAKrB,OAAOT,EAeT,SAASa,eAA8C,IAAD,EAAhCC,EAAgC,uDAAnB,GAAIb,EAAe,uDAAJ,GAC5Cc,EAAYd,EADoC,cAGjCa,GAHiC,IAGpD,2BAA+B,CAAC,IAArBE,EAAoB,QAC7B,GAAIA,EAAKf,UAAYG,MAAMC,QAAQW,EAAKf,UACtC,OAAOY,aAAaG,EAAKf,SAAUc,GAEnCd,EAASU,KAAKK,IAPkC,8BAUpD,OAAOD,EAGT,SAASE,SAAuB,IAAhBC,EAAe,uDAAJ,GACnBC,EAAQ,IAAIC,OAAJ,YAAW,+BAAX,kBAA6CC,KAAKH,GAC5DI,EAAmB,GACvB,GAAIH,EAAO,CACT,IAAMI,EAAaJ,EAAM,GAAGK,MAAM,KAClCF,EACEC,EAAWE,OAAS,EAChBF,EAAWA,EAAWE,OAAS,GAAKF,EAAWA,EAAWE,OAAS,GACnEF,EAAWA,EAAWE,OAAS,GAEvC,OAAOH,EAAmBJ,EAASQ,QAAQ,YAAa,I,2BCzEpDC,EAAaC,YAAH,gJAUVC,EAAiBD,YAAH,6CAIdE,EAAmBF,YAAH,0CAIhBG,EAAYH,YAAH,ogBA+BTI,EAAUJ,YAAH,0JAQPK,EAAgBL,YAAH,wPAabM,EAAgBN,YAAH,2FAMbO,EAAoBP,YAAH,wLAUvB,SAASQ,QAAQC,GACf,IAAMC,EAASC,mBAAQ,WACrB,ODhGJ,SAASC,YAAuB,IAAD,EAAZ5C,EAAY,uDAAJ,GACrB6C,EAAO,GADkB,cAEV7C,GAFU,IAE7B,2BAA0B,CAAC,IAAhBoB,EAAe,QAClBlB,EAAMkB,EAAKP,OAASO,EAAKN,UAE3BM,EAAKf,UAAYG,MAAMC,QAAQW,EAAKf,UACtCwC,EAAK9B,KAAKhB,QAAQ,CAACqB,GAAO,GAAIlB,IAE9B2C,EAAK9B,KACHJ,wBAAcK,IAAD,aAAad,IAAKkB,EAAKP,OAAUO,GAAQA,EAAKP,SATpC,8BAa7B,OAAOgC,ECmFED,CAAUH,EAAMC,OAAQ,MAC9B,CAACD,EAAMC,SAEJI,EAAaL,EAAMM,aAAe,OAAS,QAEjD,OACE,mBACEf,IAAKA,YACHD,EACAU,EAAMM,aAAeb,EAAmBD,GAH5C,UAME,mBAAKD,IAAKI,EAAV,UACE,mBAAKY,MAAO,CAAEC,QAASH,EAAYI,QAAS,iBAA5C,SACE,iBAAGlB,IAAKA,YAAIK,EAAeC,GAA3B,sBAEF,sBAAQa,KAAK,SAASnB,IAAKG,EAAWiB,QAASX,EAAMY,aAArD,SACE,YAAC,IAAD,SAGJ,mBAAKrB,IAAKO,EAAmBS,MAAO,CAAEC,QAASH,GAA/C,SACE,YAAC,IAAD,CACEM,QAAS,iBAACE,GACRb,EAAMc,QAAQxC,KAAd,4BACuByC,KAAKC,SACvBC,SAAS,IACT5B,QAAQ,KAAM,IAHnB,YAIIwB,EAAElC,KAAKqB,MAAMkB,KAAOtC,OAAOiC,EAAElC,KAAKqB,MAAMmB,SAI9CC,KAAK,SAVP,SAYGnB,SAOIoB,I,MAAAA,cAAWC,eAAKvB,UCzIlBwB,EAAgB,CAC3BC,KAAMF,eAAKG,gBAAK,kBAAM,+DACtBC,SAAUJ,eAAKG,gBAAK,kBAAM,+DAC1BE,WAAYL,eAAKG,gBAAK,kBAAM,+DAC5BG,KAAMN,eAAKG,gBAAK,kBAAM,+DACtBI,KAAMP,eAAKG,gBAAK,kBAAM,gEACtBK,aAAcR,eAAKG,gBAAK,kBAAM,iECE1BM,EAAexC,YAAH,mHAOZyC,EAAmBzC,YAAH,0DAIhB0C,EAAqB1C,YAAH,4EAsExB,SAAS2C,WAAWlC,GAClB,IAEcmC,EAIVnC,EALFlB,MACEsD,OAAUD,GAEZE,EAEErC,EAFFqC,KACAC,EACEtC,EADFsC,QAEIC,EAAWF,EAAKnB,KAAOmB,EAAKnB,KAAO,OACnCsB,EAAejB,EAAcgB,GACnC,OACE,YAACC,EAAD,2BAA2BH,GAA3B,IAAiCF,GAAIvD,OAAOyD,EAAKlB,MAAOmB,QAASA,IAA9CH,GAIRM,MAhFR,SAASA,UAAUzC,GACxB,MAAiCA,EAAzBC,cAAR,MAAiB,GAAjB,EAAqBqC,EAAYtC,EAAZsC,QACfI,EAAaxC,mBAAQ,kBHqB7B,SAASyC,qBAAgC,IAAD,EAAZpF,EAAY,uDAAJ,GAC9B0C,EAAS,GADyB,cAEnB1C,GAFmB,IAEtC,2BAA0B,CAAC,IAAhBoB,EAAe,QACpBA,EAAKf,UAAYG,MAAMC,QAAQW,EAAKf,UACtCqC,EAASA,EAAO2C,OAAOpE,aAAa,CAACG,GAAO,KAE5CsB,EAAO3B,KAAKK,IANsB,8BAStC,OAAOsB,EG9B0B0C,CAAmB1C,KAAS,CAACA,IAC9D,EAAwC4C,oBAAS,GAAjD,mBAAOvC,EAAP,KAAqBwC,EAArB,KACMC,EAAaC,uBAAY,kBAAMF,GAAiBxC,KAAe,CACnEA,IAGF,OACE,mBACEC,MAAO,CACL0C,SAAU,WACVC,IAAK,EACLC,OAAQ,SAJZ,UAOE,YAAC,EAAD,2BACMnD,GADN,IAEEC,OAAQA,EACRK,aAAcA,EACdM,aAAcmC,KAEhB,mBACExD,IAAKA,YACHwC,EACAzB,EAAe2B,EAAqBD,GAHxC,SAME,YAAC,aAAD,UACE,YAAC,WAAD,CAAUoB,SAAU,2CAApB,SACE,YAAC,IAAD,WACGV,EAAWW,KAAI,SAAChB,GACf,OACE,YAAC,IAAD,CACEiB,KAAI,gCACFjB,EAAKnB,KAAOtC,OAAOyD,EAAKlB,OAE1BoC,OAAQ,gBAACvD,GAAD,OACN,YAACkC,WAAD,2BAAgBlC,GAAhB,IAAuBqC,KAAMA,EAAMC,QAASA,OAEzC1D,OAAOyD,EAAKlB,UAKtBuB,EAAWtD,OAAS,GACnB,YAAC,IAAD,CACEkE,KAAK,IACLC,OAAQ,kBACN,IAAMC,EAAYd,EAAW,GACvBH,EAAWiB,EAAUtC,KAAOsC,EAAUtC,KAAO,OAC7CsB,EAAejB,EAAcgB,GACnC,OAAO,YAACC,EAAD,eAAkBgB,EAAU,OAEhC5E,OAAO8D,EAAW,GAAGvB,oB,uCCpB7BsC,E,gQArDb,SAAAF,SAAU,IAAD,OACP,OACE,qBACEhD,MAAO,CACL0C,SAAU,WACVC,IAAK,EACLC,OAAQ,SAJZ,SAOE,qBACE5C,MAAO,CACL0C,SAAU,WACVzC,QAAS,QACTkD,MAAO,MACPC,WAAY,OACZC,YAAa,OACbT,OAAQ,OACRU,gBAAiB,UARrB,SAWE,cAAC,WAAD,CAAUT,SAAU,6CAApB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CACEE,KAAK,IACLC,OAAQ,gBAACvD,GACP,IAEcmC,EAEVnC,EAHFlB,MACEsD,OAAUD,GAGRI,EAAW,EAAKvC,MAAMkB,KACxB,EAAKlB,MAAMkB,KACX,aACEsB,EAAejB,EAAcgB,GAEnC,OACE,cAACC,EAAD,2BAEM,EAAKxC,OAFX,IAGEmC,GAAIvD,OAAO,EAAKoB,MAAM8D,SAFjB3B,KAMNvD,OAAOmF,KAAK/D,MAAMsD,mB,uBA5CHU,iBCE9BC,EAAS,CACbC,cAAe,CACb1D,QAAS,OACT2D,eAAgB,SAChBC,WAAY,SACZjB,OAAQ,QACRO,MAAO,QACPG,gBAAiB,WAGnBQ,UAAW,CACTX,MAAO,MACPP,OAAQ,MACR3C,QAAS,OACT4D,WAAY,SACZD,eAAgB,SAChBG,aAAc,OACdC,SAAU,OACVC,UAAW,UAEbC,OAAQ,CACNZ,gBAAiB,QACjBa,MAAO,SAETC,MAAO,CACLd,gBAAiB,MACjBa,MAAO,SAETE,YAAa,CACXL,SAAU,SAEZM,aAAc,CACZN,SAAU,QAEZO,WAAY,CACVP,SAAU,OACV9D,QAAS,YACT6D,aAAc,OACdS,OAAQ,oBACRC,WAAY,OACZC,OAAQ,Y,4DAGZ,iBAAwBC,GAAxB,iBAAAC,EAAA,+EACyBC,MAAMF,GAD/B,cACQG,EADR,gBAGIC,YAAYD,GAHhB,SAIuBA,EAASE,OAJhC,cAIUC,EAJV,yBAKWA,GALX,yCAQIC,QAAQC,IAAR,MARJ,kBASW,MATX,iE,sBAaA,SAASJ,YAAYD,GACnB,IAAKA,EAASM,GACZ,MAAM,IAAIC,MAAJ,eAAkBP,EAASQ,OAA3B,cAAuCR,EAASS,aAExD,OAAOT,EAGT,IA0GeU,EA1GF,SAAPA,KAAQ/F,GACZ,MAA0B6C,mBAAS,CACjCmD,UAAU,EACVH,OAAQ,IACR5F,OAAQ,KAHV,mBAAOuF,EAAP,KAAaS,EAAb,KAKA,EAA0CpD,mBAAS,IAAnD,mBAAOqD,EAAP,KAAsBC,EAAtB,KAEMC,EAAcpD,uBAAY,WAC9BiD,EAAU,CAAED,UAAU,EAAMH,OAAQ,IAAK5F,OAAQA,MAChD,IAMGoG,EAAOC,OAAOC,SAASF,KAqD7B,OApDAG,qBAAU,WACR,IAAMC,EAAK,IAAIC,IAAIL,GAAMM,aACzB,GAAIF,EAAGG,IAAI,aAAc,CACvB,IAAMC,EAAYJ,EAAGK,IAAI,aAEzB,OAVqB,SAAnBC,mBAAkC,IAAd7B,EAAa,uDAAP,GAC9B,OAAOA,EAAI8B,UAAU9B,EAAI+B,YAAY,KAAO,GAQxBF,CAAiBF,GAAWK,eAE5C,IAAK,OACHf,EAAiB,S,SA5CZgB,S,0CA6CLA,CAASN,GAAWO,MAAK,SAACC,GACxB,GAAIA,EAAc,CAChB,IAAM/E,EAAUuE,EAAUxH,QAAV,YAEd,2CAFc,oBAGd,MAGIiI,EAAgBC,KAAKC,MACzBD,KAAKE,UAAUJ,GAAchI,QAAQ,UAAWiD,IAElD2D,EAAU,CACRD,UAAU,EACVH,OAAQ,IACR5F,OAAQqH,EACRhF,iBAGF2D,EAAU,CAAED,UAAU,EAAOH,OAAQ,IAAK5F,OAAQ,QAGtD,MAEF,IAAK,KACL,IAAK,MACHkG,EAAiB,UACjBF,EAAU,CACRD,UAAU,EACVH,OAAQ,IACRvC,KAAMuD,UAUZV,EAAiB,SACjBF,EAAU,CAAED,UAAU,EAAMH,OAAQ,IAAK5F,OAAQA,EAAQqC,QAAS,SAEnE,CAAC+D,IAEIb,EAAKQ,SA4BTE,GAAmC,WAAlBA,EACnB,cAAC,EAAD,2BAA2BlG,GAA3B,IAAkCsD,KAAMkC,EAAKlC,QAE7C,cAAC,IAAD,UACE,cAACoE,EAAD,2BAAiB1H,GAAjB,IAAwBC,OAAQuF,EAAKvF,OAAQqC,QAASkD,EAAKlD,aA/B7D,qBAAK/B,MAAO0D,EAAOC,cAAnB,SACE,qBACE3D,MAAK,2BACA0D,EAAOI,WACU,MAAhBmB,EAAKK,OAAiB5B,EAAOQ,OAASR,EAAOU,OAHrD,SAMmB,MAAhBa,EAAKK,OACJ,gCACE,mBAAGtF,MAAO0D,EAAOY,aAAjB,yBACA,oEAGF,gCACE,mBAAGtE,MAAO0D,EAAOW,YAAjB,iBACA,oDACA,wBACErE,MAAO0D,EAAOa,WACdpE,KAAK,SACLC,QAASyF,EAHX,wCC1JNuB,GAAgBlG,gBAAK,kBAAM,iC,qBCSjCmG,IAASrE,OACP,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOD,KAAK,IAAIC,OAAQ,gBAACvD,GAAD,OAAW,cAAC,EAAD,eAAUA,OAC7C,cAAC,IAAD,CAAOsD,KAAK,QAAQuE,UDXX,SAASC,aACtB,OACE,cAAC,WAAD,CAAU1E,SAAU,KAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOE,KAAK,kBAAkBuE,UAAWF,KACzC,cAAC,IAAD,CAAOpE,OAAQ,yBAAM,iECS3BwE,SAASC,eAAe,U","file":"static/js/main.756b42d1.chunk.js","sourcesContent":["import { SubMenu, MenuItem } from 'rc-menu';\nimport { createElement, cloneElement } from 'react';\n\nfunction buildMenu(array = []) {\n  let menu = [];\n  for (const item of array) {\n    const key = item.title || item.groupName;\n\n    if (item.children && Array.isArray(item.children)) {\n      menu.push(getMenu([item], [], key));\n    } else {\n      menu.push(\n        createElement(MenuItem, { key: item.title, ...item }, item.title),\n      );\n    }\n  }\n  return menu;\n}\n\n// eslint-disable-next-line default-param-last\nfunction getMenu(array = [], nodes = [], key, parentIndex = 0) {\n  let _nodes = nodes;\n  let children = [];\n\n  if (parentIndex !== -1 && _nodes[parentIndex]) {\n    _nodes[parentIndex] = cloneElement(_nodes[parentIndex], {}, children);\n  }\n\n  for (const index in array) {\n    if (array[index].children && Array.isArray(array[index].children)) {\n      const node = createElement(SubMenu, {\n        key: index + key,\n        title: array[index].groupName,\n      });\n      _nodes.push(node);\n      return getMenu(array[index].children, _nodes, key, 0);\n    } else {\n      children.push(\n        createElement(\n          MenuItem,\n          { key: index + key, ...array[index] },\n          array[index].title,\n        ),\n      );\n    }\n  }\n  return _nodes;\n}\n\nfunction mapTreeToFlatArray(array = []) {\n  let routes = [];\n  for (const item of array) {\n    if (item.children && Array.isArray(item.children)) {\n      routes = routes.concat(getFlatArray([item], []));\n    } else {\n      routes.push(item);\n    }\n  }\n  return routes;\n}\n\nfunction getFlatArray(inputArray = [], children = []) {\n  let _children = children;\n\n  for (const item of inputArray) {\n    if (item.children && Array.isArray(item.children)) {\n      return getFlatArray(item.children, _children);\n    } else {\n      children.push(item);\n    }\n  }\n  return _children;\n}\n\nfunction getKey(filePath = '') {\n  const match = new RegExp(/^(?<path>.*)\\/(?<file>[^/]*)$/g).exec(filePath);\n  let parentFolderName = '';\n  if (match) {\n    const parentPath = match[1].split('/');\n    parentFolderName =\n      parentPath.length > 2\n        ? parentPath[parentPath.length - 2] + parentPath[parentPath.length - 1]\n        : parentPath[parentPath.length - 1];\n  }\n  return parentFolderName + filePath.replace(/\\.|\\s|\\//g, '');\n}\n\nexport { buildMenu, getKey, mapTreeToFlatArray };\n","/** @jsxImportSource @emotion/react */\n\nimport { css } from '@emotion/react';\nimport Menu from 'rc-menu';\nimport { memo, useMemo } from 'react';\nimport 'rc-menu/assets/index.css';\nimport { FaBars } from 'react-icons/fa';\nimport { withRouter } from 'react-router-dom';\n\nimport { buildMenu, getKey } from './utility/menu';\n\nconst sidebarCss = css`\n  background: #2ca8ff;\n  position: fixed;\n  top: 0;\n  height: 100%;\n  bottom: 0;\n  left: 0;\n  z-index: 1031;\n`;\n\nconst sidebarOpenCss = css`\n  width: 260px;\n`;\n\nconst sidebarClosedCss = css`\n  width: 3%;\n`;\n\nconst menuBtCss = css`\n  margin-left: 4px;\n  margin-top: 2px;\n  margin-bottom: 2px;\n  margin-right: 4px;\n  z-index: 7;\n  font-size: 18px;\n  background-color: transparent;\n  border: none !important;\n  height: 30px;\n  width: 30px;\n  padding: 1px 6px;\n\n  & svg {\n    fill: white;\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  &:active {\n    background-color: rgba(0, 0, 0, 0.5);\n    border-radius: 50%;\n  }\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.2);\n    border-radius: 50%;\n  }\n`;\n\nconst logoCss = css`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  z-index: 4;\n  border-bottom: 1px solid #eee;\n`;\n\nconst simpleTextCss = css`\n  text-transform: uppercase;\n  padding: 0.5rem 0;\n  display: block;\n  white-space: nowrap;\n  font-size: 1em;\n  color: #fff;\n  text-decoration: none;\n  font-weight: 400;\n  line-height: 30px;\n  overflow: hidden;\n`;\n\nconst logoNormalCss = css`\n  display: block;\n  opacity: 1;\n  transform: translateZ(0);\n`;\n\nconst sidebarWrapperCss = css`\n  position: relative;\n  height: calc(100vh - 75px);\n  overflow-y: auto;\n  overflow-x: hidden;\n  width: 260px;\n  z-index: 4;\n  padding-bottom: 100px;\n`;\n\nfunction Sidebar(props) {\n  const routes = useMemo(() => {\n    return buildMenu(props.routes, []);\n  }, [props.routes]);\n\n  const subDisplay = props.menuIsClosed ? 'none' : 'block';\n\n  return (\n    <div\n      css={css(\n        sidebarCss,\n        props.menuIsClosed ? sidebarClosedCss : sidebarOpenCss,\n      )}\n    >\n      <div css={logoCss}>\n        <div style={{ display: subDisplay, padding: '0.5rem 0.7rem' }}>\n          <a css={css(simpleTextCss, logoNormalCss)}>NMRium</a>\n        </div>\n        <button type=\"button\" css={menuBtCss} onClick={props.onMenuToggle}>\n          <FaBars />\n        </button>\n      </div>\n      <div css={sidebarWrapperCss} style={{ display: subDisplay }}>\n        <Menu\n          onClick={(e) => {\n            props.history.push(\n              `/SamplesDashboard/${Math.random()\n                .toString(36)\n                .replace('0.', '')}/${\n                e.item.props.view + getKey(e.item.props.file)\n              }`,\n            );\n          }}\n          mode=\"inline\"\n        >\n          {routes}\n        </Menu>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(memo(Sidebar));\n","import { lazy, memo } from 'react';\n\nexport const possibleViews = {\n  Exam: memo(lazy(() => import('./Exam'))),\n  Exercise: memo(lazy(() => import('./Exercise'))),\n  SingleView: memo(lazy(() => import('./SingleView'))),\n  Test: memo(lazy(() => import('./Test'))),\n  View: memo(lazy(() => import('./View'))),\n  TwoInstances: memo(lazy(() => import('./TwoInstances'))),\n};\n","/** @jsxImportSource @emotion/react */\n\nimport { css } from '@emotion/react';\nimport { Suspense, StrictMode, useMemo, useState, useCallback } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Sidebar from '../Sidebar';\nimport { mapTreeToFlatArray, getKey } from '../utility/menu';\nimport { possibleViews } from '../views';\n\nconst mainPanelCss = css`\n  position: relative;\n  float: right;\n  height: 100%;\n  background-color: #ebecf1;\n`;\n\nconst mainPanelOpenCss = css`\n  width: calc(100% - 260px);\n`;\n\nconst mainPanelClosedCss = css`\n  width: 98%;\n  margin-left: 20px !important;\n`;\n\nexport function Dashboard(props) {\n  const { routes = [], baseURL } = props;\n  const routesList = useMemo(() => mapTreeToFlatArray(routes), [routes]);\n  const [menuIsClosed, setMenuIsClosed] = useState(false);\n  const toggleMenu = useCallback(() => setMenuIsClosed(!menuIsClosed), [\n    menuIsClosed,\n  ]);\n\n  return (\n    <div\n      style={{\n        position: 'relative',\n        top: 0,\n        height: '100vh',\n      }}\n    >\n      <Sidebar\n        {...props}\n        routes={routes}\n        menuIsClosed={menuIsClosed}\n        onMenuToggle={toggleMenu}\n      />\n      <div\n        css={css(\n          mainPanelCss,\n          menuIsClosed ? mainPanelClosedCss : mainPanelOpenCss,\n        )}\n      >\n        <StrictMode>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Switch>\n              {routesList.map((prop) => {\n                return (\n                  <Route\n                    path={`/SamplesDashboard/:id/${\n                      prop.view + getKey(prop.file)\n                    }`}\n                    render={(props) => (\n                      <RenderView {...props} prop={prop} baseURL={baseURL} />\n                    )}\n                    key={getKey(prop.file)}\n                  />\n                );\n              })}\n\n              {routesList.length > 0 && (\n                <Route\n                  path=\"/\"\n                  render={() => {\n                    const routeProp = routesList[0];\n                    const viewName = routeProp.view ? routeProp.view : 'View';\n                    const RenderedView = possibleViews[viewName];\n                    return <RenderedView {...routeProp[0]} />;\n                  }}\n                  key={getKey(routesList[0].file)}\n                />\n              )}\n            </Switch>\n          </Suspense>\n        </StrictMode>\n      </div>\n    </div>\n  );\n}\n\nfunction RenderView(props) {\n  const {\n    match: {\n      params: { id },\n    },\n    prop,\n    baseURL,\n  } = props;\n  const viewName = prop.view ? prop.view : 'View';\n  const RenderedView = possibleViews[viewName];\n  return (\n    <RenderedView key={id} {...prop} id={getKey(prop.file)} baseURL={baseURL} />\n  );\n}\n\nexport default Dashboard;\n","import { Suspense, PureComponent } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { getKey } from '../utility/menu';\nimport { possibleViews } from '../views';\n\nclass SingleDisplayerLayout extends PureComponent {\n  render() {\n    return (\n      <div\n        style={{\n          position: 'relative',\n          top: 0,\n          height: '100vh',\n        }}\n      >\n        <div\n          style={{\n            position: 'absolute',\n            display: 'block',\n            width: '99%',\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            height: '100%',\n            backgroundColor: 'ebecf1',\n          }}\n        >\n          <Suspense fallback={<div>Loading...</div>}>\n            <Switch>\n              <Route\n                path=\"/\"\n                render={(props) => {\n                  const {\n                    match: {\n                      params: { id },\n                    },\n                  } = props;\n                  const viewName = this.props.view\n                    ? this.props.view\n                    : 'SingleView';\n                  const RenderedView = possibleViews[viewName];\n\n                  return (\n                    <RenderedView\n                      key={id}\n                      {...this.props}\n                      id={getKey(this.props.patrh)}\n                    />\n                  );\n                }}\n                key={getKey(this.props.path)}\n              />\n            </Switch>\n          </Suspense>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SingleDisplayerLayout;\n","import { useEffect, useState, useCallback } from 'react';\nimport { MemoryRouter } from 'react-router-dom';\n\nimport routes from '../samples';\n\nimport AdminLayout from './Admin.jsx';\nimport SingleDisplayerLayout from './SingleDisplayerLayout.jsx';\n\nconst styles = {\n  bodyContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh',\n    width: '100vw',\n    backgroundColor: '#e3e3e3',\n  },\n\n  container: {\n    width: '30%',\n    height: '40%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: '10px',\n    fontSize: '20px',\n    textAlign: 'center',\n  },\n  normal: {\n    backgroundColor: 'white',\n    color: 'black',\n  },\n  error: {\n    backgroundColor: 'red',\n    color: 'white',\n  },\n  errorHeader: {\n    fontSize: '100px',\n  },\n  normalHeader: {\n    fontSize: '24px',\n  },\n  loadButton: {\n    fontSize: '12px',\n    padding: '12px 40px',\n    borderRadius: '10px',\n    border: '1px solid #c70000',\n    fontWeight: 'bold',\n    cursor: 'pointer',\n  },\n};\nasync function loadData(url) {\n  const response = await fetch(url);\n  try {\n    checkStatus(response);\n    const data = await response.json();\n    return data;\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.log(e);\n    return null;\n  }\n}\n\nfunction checkStatus(response) {\n  if (!response.ok) {\n    throw new Error(`HTTP ${response.status} - ${response.statusText}`);\n  }\n  return response;\n}\n\nconst Main = (props) => {\n  const [data, setRoutes] = useState({\n    isLoaded: false,\n    status: 200,\n    routes: [],\n  });\n  const [dashBoardType, setDashBoardType] = useState('');\n\n  const loadHandler = useCallback(() => {\n    setRoutes({ isLoaded: true, status: 200, routes: routes });\n  }, []);\n\n  const getFileExtension = (url = '') => {\n    return url.substring(url.lastIndexOf('.') + 1);\n  };\n\n  const href = window.location.href;\n  useEffect(() => {\n    const qs = new URL(href).searchParams;\n    if (qs.has('sampleURL')) {\n      const sampleURL = qs.get('sampleURL');\n      const extention = getFileExtension(sampleURL).toLowerCase();\n      switch (extention) {\n        case 'json': {\n          setDashBoardType('multi');\n          loadData(sampleURL).then((remoteRoutes) => {\n            if (remoteRoutes) {\n              const baseURL = sampleURL.replace(\n                // eslint-disable-next-line no-useless-escape\n                /^(?<url>.*[\\\\\\/])?(?<filename>.*?\\.[^.]*?|)$/g,\n                '$1',\n              );\n\n              const _remoteRoutes = JSON.parse(\n                JSON.stringify(remoteRoutes).replace(/\\.\\/+?/g, baseURL),\n              );\n              setRoutes({\n                isLoaded: true,\n                status: 200,\n                routes: _remoteRoutes,\n                baseURL,\n              });\n            } else {\n              setRoutes({ isLoaded: false, status: 404, routes: [] });\n            }\n          });\n          break;\n        }\n        case 'dx':\n        case 'jdx': {\n          setDashBoardType('single');\n          setRoutes({\n            isLoaded: true,\n            status: 200,\n            path: sampleURL,\n          });\n\n          break;\n        }\n\n        default:\n          break;\n      }\n    } else {\n      setDashBoardType('multi');\n      setRoutes({ isLoaded: true, status: 200, routes: routes, baseURL: './' });\n    }\n  }, [href]);\n\n  return !data.isLoaded ? (\n    <div style={styles.bodyContainer}>\n      <div\n        style={{\n          ...styles.container,\n          ...(data.status === 200 ? styles.normal : styles.error),\n        }}\n      >\n        {data.status === 200 ? (\n          <div>\n            <p style={styles.normalHeader}>Please wait</p>\n            <p>We will redirect you in a minute</p>\n          </div>\n        ) : (\n          <div>\n            <p style={styles.errorHeader}>404</p>\n            <p>Resource not found.</p>\n            <button\n              style={styles.loadButton}\n              type=\"button\"\n              onClick={loadHandler}\n            >\n              Load local samples\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  ) : dashBoardType && dashBoardType === 'single' ? (\n    <SingleDisplayerLayout {...props} path={data.path} />\n  ) : (\n    <MemoryRouter>\n      <AdminLayout {...props} routes={data.routes} baseURL={data.baseURL} />\n    </MemoryRouter>\n  );\n};\n\nexport default Main;\n","import { lazy, Suspense } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nconst TestHighlight = lazy(() => import('./TestHighlight'));\n\nexport default function TestRoutes() {\n  return (\n    <Suspense fallback={null}>\n      <Switch>\n        <Route path=\"/test/highlight\" component={TestHighlight} />\n        <Route render={() => <div>Page not found</div>} />\n      </Switch>\n    </Suspense>\n  );\n}\n","import ReactDOM from 'react-dom';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n\nimport Main from './demo/layouts/Main';\nimport TestRoutes from './demo/test/TestRoutes.jsx';\n\n// Reset styles so they do not affect development of the React component.\nimport 'modern-normalize/modern-normalize.css';\nimport './demo/preflight.css';\n\nimport './demo/index.css';\n\nReactDOM.render(\n  <HashRouter>\n    <Switch>\n      <Route path=\"/\" render={(props) => <Main {...props} />} />\n      <Route path=\"/test\" component={TestRoutes} />\n    </Switch>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}